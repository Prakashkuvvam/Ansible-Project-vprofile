- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC variables
      include_vars: vars/vpc_setup
    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        state: "{{state}}"
        dns_hostnames: true
        dns_support: true
        tenancy: default
      register: vpcout
    #    - debug:
    #        var: vpcout
    - name: Create Public Subnet in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: true
        az: "{{Zone1}}"
        resource_tags:
          Name: vprofile-PubSub1
      register: pubsub1_out
    - name: Create Public Subnet in Zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: true
        az: "{{Zone2}}"
        resource_tags:
          Name: vprofile-PubSub2
      register: pubsub2_out
    - name: Create Public Subnet in Zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: true
        az: "{{Zone3}}"
        resource_tags:
          Name: vprofile-PubSub3
      register: pubsub3_out
    - name: Create Private Subnet in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        map_public: true
        az: "{{Zone1}}"
        resource_tags:
          Name: vprofile-PrivSub1
      register: privsub1_out
    - name: Create Private Subnet in Zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        map_public: true
        az: "{{Zone2}}"
        resource_tags:
          Name: vprofile-PrivSub2
      register: privsub2_out
    - name: Create Private Subnet in Zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        map_public: true
        az: "{{Zone3}}"
        resource_tags:
          Name: vprofile-PrivSub3
      register: privsub3_out
    - name: Internet Gateway Setup
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-IGW
      register: igw_out
    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: vprofile-PubRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: PubRT_out
    - name: Create new NAT gateway and allocate new EIP if a nat gateway does not yet exit in the subnet
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATGW_out
    - name: Set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: vprofile-PrivRT
        subnets:
          - "{{privsub1_out.subnet.id}}"
          - "{{privsub2_out.subnet.id}}"
          - "{{privsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_out.nat_gateway_id }}"
      register: PrivRT_out
    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - PubRT_out.route_table.id
        - NATGW_out.nat_gateway_id
        - PrivRT_out.route_table.id
    - set_fact:
        vpcid: "{{vpcout.vpc.id}}"
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        privsub1id: "{{privsub1_out.subnet.id}}"
        privsub2id: "{{privsub2_out.subnet.id}}"
        privsub3id: "{{privsub3_out.subnet.id}}"
        igwid: "{{igw_out.gateway_id}}"
        PubRTid: "{{PubRT_out.route_table.id}}"
        NATGWid: "{{NATGW_out.nat_gateway_id}}"
        PrivRTid: "{{PrivRT_out.route_table.id}}"
        cacheable: yes
    - name: Create varable file for vpc output
      copy:
        content: "vpcid: {{vpcout.vpc.id}}\npubsub1id: {pubsub1_out.subnet.id{}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprivsub1id: {{privsub1_out.subnet.id}}\nprivsub2id: {{privsub2_out.subnet.id}}\nprivsub3id: {{privsub3_out.subnet.id}}\nigwid: {{igw_out.gateway_id}}\nPubRTid: {{PubRT_out.route_table.id}}\nNATGWid: {{NATGW_out.nat_gateway_id}}\nPrivRTid: {{PrivRT_out.route_table.id}}"
        dest: vars/output_vars
